import io
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils import executor
from datetime import datetime
from story_image import *
API_TOKEN = '7011351217:AAHArFPjVC13IlexGydcyn7eUsVk45SboBQ'
ADMIN_CHAT_ID = 234037002

bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)
bot_start_time = datetime.now()

class Form(StatesGroup):
    waiting_for_style = State()
    waiting_for_text = State()

async def on_startup(dp):
    await bot.send_message(chat_id=ADMIN_CHAT_ID, text="ü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")

async def on_shutdown(dp):
    await bot.send_message(chat_id=ADMIN_CHAT_ID, text="üî¥ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

@dp.message_handler(commands=['start', 'help'])
async def cmd_start(message: types.Message):
    await message.answer("ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ —Ç–µ–∫—Å—Ç—É.\n\n"
                        "–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton("–î–∞"), types.KeyboardButton("–ù–µ—Ç"))
    
    await message.answer("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∏–ª—å Midjourney? (–î–∞/–ù–µ—Ç)", reply_markup=keyboard)
    await Form.waiting_for_style.set()

@dp.message_handler(state=Form.waiting_for_style)
async def process_style(message: types.Message, state: FSMContext):
    style_choice = message.text.lower()
    
    if style_choice not in ['–¥–∞', '–Ω–µ—Ç']:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ '–î–∞' –∏–ª–∏ '–ù–µ—Ç'")
        return
    
    midjourney_style = style_choice == '–¥–∞'
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä —Å—Ç–∏–ª—è
    await state.update_data(midjourney_style=midjourney_style)
    
    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await message.answer("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–Ω–µ –º–µ–Ω–µ–µ 50 —Å–∏–º–≤–æ–ª–æ–≤):", 
                        reply_markup=types.ReplyKeyboardRemove())
    
    await Form.waiting_for_text.set()

@dp.message_handler(state=Form.waiting_for_text)
async def process_text(message: types.Message, state: FSMContext):
    user_text = message.text
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Ç–µ–∫—Å—Ç–∞
    if len(user_text) < 50:
        await message.answer("‚ùå –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–µ –º–µ–Ω–µ–µ 50 —Å–∏–º–≤–æ–ª–æ–≤.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä —Å—Ç–∏–ª—è
    user_data = await state.get_data()
    midjourney_style = user_data.get('midjourney_style', False)
    
    status_msg = await message.answer("üñ® –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ gen_img
        best_frames, best_clips, best_lpips, story_ls = gen_img(user_text, midjourney_style)
        
        if not (len(best_frames) == len(best_clips) == len(best_lpips) == len(story_ls)):
            await message.answer("‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—É—á–µ–Ω—ã —Å–ø–∏—Å–∫–∏ —Ä–∞–∑–Ω–æ–π –¥–ª–∏–Ω—ã")
            return
        
        await bot.delete_message(chat_id=message.chat.id, message_id=status_msg.message_id)
        
        progress_msg = await message.answer(f"üîç –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(story_ls)} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤...")
        
        for i in range(len(story_ls)):
            msg_text = (f"üé® –°—Ç–∏–ª—å: {'Midjourney' if midjourney_style else '–û–±—ã—á–Ω—ã–π'}\n"
                       f"üìñ {story_ls[i]}\n\n"
                       f"üìä –ú–µ—Ç—Ä–∏–∫–∏:\nüñº CLIP: {best_clips[i]:.2f}\nüìê LPIPS: {best_lpips[i]:.2f}")
            
            img_byte_arr = io.BytesIO()
            best_frames[i].save(img_byte_arr, format='JPEG')
            img_byte_arr.seek(0)
            
            await message.answer_photo(types.InputFile(img_byte_arr), caption=msg_text)
            await asyncio.sleep(0.5)
        
        await bot.delete_message(chat_id=message.chat.id, message_id=progress_msg.message_id)
        await message.answer("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –µ—â—ë? –ù–∞–∂–º–∏—Ç–µ /start")
    
    except Exception as e:
        await message.answer(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        await bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ: {str(e)}")
    
    finally:
        await state.finish()

if __name__ == '__main__':
    executor.start_polling(dp, 
                         on_startup=on_startup, 
                         on_shutdown=on_shutdown, 
                         skip_updates=True)
